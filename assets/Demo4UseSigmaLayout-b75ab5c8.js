
/**
*  亲爱的朋友：
*      很高兴你能看到这段文字，这说明你是非常热爱技术、热爱学习的。
*      组件中所有示例都可以通过文档 + typescript描述找到相关配置及用法
*      示例可以为你提供额外的灵感、方便你完成开发目标、节省你工作时间
*      以下代码也许花些时间很容易破解，但相比下面这个方案，通过破解代码来学习知识显然是不划算的：
*      https://relation-graph.com/#/vip-services
*      因为你的时间非常宝贵，开通会员直接查看代码学习、直接沟通解决问题，是最最高效的学习和工作方法，期待你的加入。
**/
              import{G as a}from"./is-graph-cdbb3936.js";import{c as x,f as n}from"./index-fda28e08.js";import{n as s}from"./index-95e0ef84.js";var f=function(){var t=this,o=t.$createElement,N=t._self._c||o;return N("div",[N("div",{staticStyle:{height:"calc(100vh - 60px)"}},[N("RelationGraph",{ref:"graphRef",attrs:{options:t.graphOptions,"on-node-click":t.onNodeClick,"on-line-click":t.onLineClick},scopedSlots:t._u([{key:"graph-plug",fn:function(){return[N("div",{staticClass:"c-my-panel"},[N("div",{staticClass:"c-option-name",staticStyle:{"line-height":"25px",padding:"10px"}},[t._v(" 此布局使用到了第三方布局算法：Sigma，同时relation-graph的支持插槽等强大功能您依然可以使用，完美融合。Sigma力导向图布局是经典的布局算法。 ")])])]},proxy:!0}])})],1)])},l=[];const m={name:"Demo",components:{},data(){return{currentCase:"横向树状图谱",isShowCodePanel:!1,graphOptions:{debug:!1,lineUseTextPath:!0,layout:{layoutName:"fixed"},defaultNodeShape:0,defaultLineShape:1,defaultJunctionPoint:"border",defaultNodeBorderWidth:0,defaultNodeWidth:30,defaultNodeHeight:30,defaultLineColor:"rgba(0, 186, 189, 1)",defaultNodeColor:"rgba(0, 206, 209, 1)"}}},mounted(){this.useGraphologyLayout()},methods:{async useGraphologyLayout(){let t={rootId:"root",nodes:[{id:"root",text:"节点"},{id:"N2",text:"新节点N2"},{id:"N3",text:"新节点N3"},{id:"N4",text:"新节点N4"},{id:"N5",text:"新节点N5"},{id:"N6",text:"新节点N6"},{id:"N7",text:"新节点N7"},{id:"N8",text:"新节点N8"},{id:"N9",text:"新节点N9"},{id:"N10",text:"新节点N10"},{id:"N11",text:"新节点N11"},{id:"N12",text:"新节点N12"},{id:"N13",text:"新节点N13"},{id:"N14",text:"新节点N14"},{id:"N15",text:"新节点N15"},{id:"N16",text:"新节点N16"},{id:"N17",text:"新节点N17"},{id:"N18",text:"新节点N18"},{id:"N19",text:"新节点N19"},{id:"N20",text:"新节点N20"},{id:"N21",text:"新节点N21"},{id:"N22",text:"新节点N22"},{id:"N23",text:"新节点N23"},{id:"N24",text:"新节点N24"},{id:"N25",text:"新节点N25"},{id:"N26",text:"新节点N26"},{id:"N27",text:"New-N27"},{id:"N28",text:"New-N28"},{id:"N29",text:"New-N29"},{id:"N30",text:"New-N30"},{id:"N31",text:"New-N31"},{id:"N32",text:"New-N32"},{id:"N33",text:"New-N33"},{id:"N34",text:"New-N34"},{id:"N35",text:"New-N35"},{id:"N36",text:"New-N36"},{id:"N37",text:"New-N37"},{id:"N38",text:"New-N38"},{id:"N39",text:"New-N39"}],lines:[{from:"N3",to:"N2",text:"新连线1"},{from:"N2",to:"root",text:"新连线1"},{from:"root",to:"N4",text:"新连线2"},{from:"N4",to:"N5",text:"新连线3"},{from:"N6",to:"N7",text:"新连线2"},{from:"N7",to:"root",text:"新连线3"},{from:"N8",to:"N9",text:"新连线4"},{from:"N9",to:"root",text:"新连线5"},{from:"N10",to:"N11",text:"新连线6"},{from:"N11",to:"root",text:"新连线7"},{from:"N13",to:"N12",text:"新连线8"},{from:"N12",to:"root",text:"新连线9"},{from:"N18",to:"N17",text:"新连线10"},{from:"N17",to:"N14",text:"新连线11"},{from:"N15",to:"N14",text:"新连线12"},{from:"N16",to:"N15",text:"新连线13"},{from:"N12",to:"N14",text:"新连线14"},{from:"N20",to:"N19",text:"新连线15"},{from:"N21",to:"N19",text:"新连线16"},{from:"N19",to:"N15",text:"新连线17"},{from:"N26",to:"N22",text:"新连线18"},{from:"N24",to:"N25",text:"新连线19"},{from:"N24",to:"N22",text:"新连线20"},{from:"N22",to:"N23",text:"新连线21"},{from:"N23",to:"N14",text:"新连线22"},{from:"root",to:"N30",text:"新连线1"},{from:"root",to:"N27",text:"新连线2"},{from:"N30",to:"N33",text:"新连线3"},{from:"N30",to:"N29",text:"新连线4"},{from:"N27",to:"N28",text:"新连线5"},{from:"N27",to:"N31",text:"新连线6"},{from:"N27",to:"N32",text:"新连线7"},{from:"N4",to:"N34",text:"新连线8"},{from:"N28",to:"N35",text:"新连线9"},{from:"N28",to:"N36",text:"新连线12"},{from:"N28",to:"N37",text:"新连线13"},{from:"N36",to:"N39",text:"新连线14"},{from:"N36",to:"N38",text:"新连线15"}]};t.nodes.forEach(e=>{e.text="N"});const o=new a,N=this.$refs.graphRef.getInstance();await N.setJsonData(t),N.getNodes().forEach(e=>{o.addNode(e.id,{text:e.text,width:e.el.offsetWidth,height:e.el.offsetHeight})}),N.getLinks().forEach(e=>{e.relations.forEach(r=>{o.addEdge(e.fromNode.id,e.toNode.id,{id:r.id,weight:1})})}),x.assign(o),n.assign(o,50),o.nodes().forEach(e=>{const r=o.getNodeAttributes(e);console.log(e);const i=N.getNodeById(e);i.x=r.x*10,i.y=r.y*10})},onNodeClick(t,o){console.log("onNodeClick:",t)},onLineClick(t,o,N){console.log("onLineClick:",t)}}},d={};var c=s(m,f,l,!1,u,"4f221765",null,null);function u(t){for(let o in d)this[o]=d[o]}const _=function(){return c.exports}();export{_ as default};
