
/**
*  亲爱的朋友：
*      很高兴你能看到这段文字，这说明你是非常热爱技术、热爱学习的。
*      组件中所有示例都可以通过文档 + typescript描述找到相关配置及用法
*      示例可以为你提供额外的灵感、方便你完成开发目标、节省你工作时间
*      以下代码也许花些时间很容易破解，但相比下面这个方案，通过破解代码来学习知识显然是不划算的：
*      https://relation-graph.com/#/vip-services
*      因为你的时间非常宝贵，开通会员直接查看代码学习、直接沟通解决问题，是最最高效的学习和工作方法，期待你的加入。
**/
              import{d as x}from"./index-a92bec11.js";import{m as h,h as c}from"./relation-graph-9d32883a.js";import{n as m}from"./index-4e420adb.js";console.log("JUNCTION_POINT_STYLE:",h);class p extends c{constructor(...r){super(...r)}createLinePath(r,e,i){let t=r.fromNode;t||(t={x:0,y:0,el:{offsetWidth:10,offsetHeight:10}});const o=r.toNode,n={x:0,y:0,rotate:0};if(Number.isNaN(t.x)||Number.isNaN(t.y))return console.log("error start node:",t.text,t.x,t.y),n.x=50,n.y=50,n.rotate=0,this.createReturnValue("M 0 0 L 100 100",n);if(Number.isNaN(o.x)||Number.isNaN(o.y))return console.log("error end point:",o.text,o.x,o.y),n.x=50,n.y=50,n.rotate=0,this.createReturnValue("M 0 0 L 100 100",n);const a=[];for(let s=0;s<e.data.points.length;s++){let f=e.data.points[s];s===0&&(f={x:t.x+e.data.startPointOffset.x,y:t.y+e.data.startPointOffset.y}),s===e.data.points.length-1&&(f={x:o.x+e.data.endPointOffset.x,y:o.y+e.data.endPointOffset.y}),a.push("L "+Math.floor(f.x)+" "+Math.floor(f.y))}if(a.length===0)return this.createReturnValue("M 0 0 L 100 100",n);const d=`M ${a.join(" ").substring(1)}`;return console.log("createLinePath",d),this.createReturnValue(d,n)}calcTextPosition(r,e,i,t,o){const n=i-r,a=t-e;o.rotate=h.getTextAngle(r,e,i,t),o.x=Math.round(r+n/2),o.y=Math.round(e+a/2),Number.isNaN(o.rotate)&&(o.rotate=0)}getTextTransform(r,e,i,t){if(Number.isNaN(e)||Number.isNaN(i))return"translate(0,0)";const o=r.lineShape===void 0?this.options.defaultLineShape:r.lineShape;return o===1||o===4?`translate(${e},${i})rotate(${t||0})`:`translate(${e},${i})`}}var u=function(){var N=this,r=N.$createElement,e=N._self._c||r;return e("div",[e("div",{staticStyle:{height:"50px","padding-top":"6px","padding-left":"20px","padding-right":"30px","border-bottom":"#efefef solid 1px","font-size":"12px"}},[e("el-radio-group",{attrs:{size:"mini"},on:{change:N.showGraph},model:{value:N.dataId,callback:function(i){N.dataId=i},expression:"dataId"}},[e("el-radio-button",{attrs:{label:"1"}},[N._v("样例数据1")]),e("el-radio-button",{attrs:{label:"2"}},[N._v("样例数据2")])],1),N._v(" 此布局使用到了第三方布局算法：Dagre，同时relation-graph的支持插槽等强大功能您依然可以使用，完美融合。Dagre布局可以在关系混乱时通过设置关系权重让布局清晰，并通过复杂曲线连线绕开节点。 ")],1),e("div",{staticStyle:{height:"calc(100vh - 100px)"}},[e("RelationGraph",{ref:"graphRef",attrs:{options:N.graphOptions,relationGraphCore:N.relationGraphCore,"on-node-click":N.onNodeClick,"on-line-click":N.onLineClick}})],1)])},g=[];const _={name:"Demo",components:{},data(){return{relationGraphCore:p,dataId:"1",isShowCodePanel:!1,graphOptions:{debug:!1,lineUseTextPath:!0,layout:{layoutName:"fixed"},defaultNodeShape:1,defaultLineShape:3,defaultJunctionPoint:"border",defaultNodeBorderWidth:0,defaultLineColor:"rgba(0, 186, 189, 1)",defaultNodeColor:"rgba(0, 206, 209, 1)"}}},mounted(){this.showGraph()},methods:{async showGraph(){let N={};this.dataId==="1"?N={rootId:"root",nodes:[{id:"root",text:"主题"},{id:"N2",text:"New-N2"},{id:"N3",text:"New-N3"},{id:"N4",text:"New-N4"},{id:"N5",text:"New-N5"},{id:"N6",text:"New-N6"},{id:"N7",text:"New-N7"},{id:"N8",text:"New-N8"}],lines:[{from:"root",to:"N2",text:"新连线1"},{from:"root",to:"N3",text:"新连线2"},{from:"N3",to:"N4",text:"新连线4"},{from:"N4",to:"N5",text:"新连线5"},{from:"N5",to:"N6",text:"新连线6"},{from:"N6",to:"N2",text:"新连线7"},{from:"N2",to:"N8",text:"新连线8"},{from:"N2",to:"N7",text:"新连线9"},{from:"N7",to:"N8",text:"新连线10"},{from:"root",to:"N8",text:"新连线11"}]}:N={rootId:"root",nodes:[{id:"root",text:"节点"},{id:"N2",text:"新节点N2"},{id:"N3",text:"新节点N3"},{id:"N4",text:"新节点N4"},{id:"N5",text:"新节点N5"},{id:"N6",text:"新节点N6"},{id:"N7",text:"新节点N7"},{id:"N8",text:"新节点N8"},{id:"N9",text:"新节点N9"},{id:"N10",text:"新节点N10"},{id:"N11",text:"新节点N11"},{id:"N12",text:"新节点N12"},{id:"N13",text:"新节点N13"},{id:"N14",text:"新节点N14"},{id:"N15",text:"新节点N15"},{id:"N16",text:"新节点N16"},{id:"N17",text:"新节点N17"},{id:"N18",text:"新节点N18"},{id:"N19",text:"新节点N19"},{id:"N20",text:"新节点N20"},{id:"N21",text:"新节点N21"},{id:"N22",text:"新节点N22"},{id:"N23",text:"新节点N23"},{id:"N24",text:"新节点N24"},{id:"N25",text:"新节点N25"},{id:"N26",text:"新节点N26"},{id:"N27",text:"New-N27"},{id:"N28",text:"New-N28"},{id:"N29",text:"New-N29"},{id:"N30",text:"New-N30"},{id:"N31",text:"New-N31"},{id:"N32",text:"New-N32"},{id:"N33",text:"New-N33"},{id:"N34",text:"New-N34"},{id:"N35",text:"New-N35"},{id:"N36",text:"New-N36"},{id:"N37",text:"New-N37"},{id:"N38",text:"New-N38"},{id:"N39",text:"New-N39"}],lines:[{from:"N3",to:"N2",text:"新连线1"},{from:"N2",to:"root",text:"新连线1"},{from:"root",to:"N4",text:"新连线2"},{from:"N4",to:"N5",text:"新连线3"},{from:"N6",to:"N7",text:"新连线2"},{from:"N7",to:"root",text:"新连线3"},{from:"N8",to:"N9",text:"新连线4"},{from:"N9",to:"root",text:"新连线5"},{from:"N10",to:"N11",text:"新连线6"},{from:"N11",to:"root",text:"新连线7"},{from:"N13",to:"N12",text:"新连线8"},{from:"N12",to:"root",text:"新连线9"},{from:"N18",to:"N17",text:"新连线10"},{from:"N17",to:"N14",text:"新连线11"},{from:"N15",to:"N14",text:"新连线12"},{from:"N16",to:"N15",text:"新连线13"},{from:"N12",to:"N14",text:"新连线14"},{from:"N20",to:"N19",text:"新连线15"},{from:"N21",to:"N19",text:"新连线16"},{from:"N19",to:"N15",text:"新连线17"},{from:"N26",to:"N22",text:"新连线18"},{from:"N24",to:"N25",text:"新连线19"},{from:"N24",to:"N22",text:"新连线20"},{from:"N22",to:"N23",text:"新连线21"},{from:"N23",to:"N14",text:"新连线22"},{from:"root",to:"N30",text:"新连线1"},{from:"root",to:"N27",text:"新连线2"},{from:"N30",to:"N33",text:"新连线3"},{from:"N30",to:"N29",text:"新连线4"},{from:"N27",to:"N28",text:"新连线5"},{from:"N27",to:"N31",text:"新连线6"},{from:"N27",to:"N32",text:"新连线7"},{from:"N4",to:"N34",text:"新连线8"},{from:"N28",to:"N35",text:"新连线9"},{from:"N28",to:"N36",text:"新连线12"},{from:"N28",to:"N37",text:"新连线13"},{from:"N36",to:"N39",text:"新连线14"},{from:"N36",to:"N38",text:"新连线15"}]},N.nodes.forEach(t=>{});let r=0;N.lines.forEach(t=>{t.data={points:[]},t.id="L"+r++});const e=new x.graphlib.Graph;e.setGraph({nodesep:50,ranksep:50,ranker:"network-simplex"}),e.setDefaultEdgeLabel(function(){return{}});const i=this.$refs.graphRef.getInstance();await i.setJsonData(N),i.getNodes().forEach(t=>{t.width=t.el.offsetWidth,t.height=t.el.offsetHeight,e.setNode(t.id,t)}),i.getLinks().forEach(t=>{t.relations.forEach(o=>{e.setEdge(t.fromNode.id,t.toNode.id,{id:o.id})})}),x.layout(e),i.getNodes().forEach(t=>{t.x=t.x-t.el.offsetWidth/2-5,t.y=t.y-t.el.offsetHeight/2-5}),e.edges().forEach(t=>{const o=e.edge(t);console.log(o);const n=this.getLineById(i,o.id),a=this.getLinkByLineId(i,o.id);n.data.points=o.points,n.data.startPointOffset={x:o.points[0].x-a.fromNode.x,y:o.points[0].y-a.fromNode.y},n.data.endPointOffset={x:o.points[o.points.length-1].x-a.toNode.x,y:o.points[o.points.length-1].y-a.toNode.y}}),console.log(i.getGraphJsonData()),await i.moveToCenter(),await i.zoomToFit()},getLineById(N,r){for(const e of N.getLinks())for(const i of e.relations)if(i.id===r)return i},getLinkByLineId(N,r){for(const e of N.getLinks())for(const i of e.relations)if(i.id===r)return e},onNodeClick(N,r){console.log("onNodeClick:",N)},onLineClick(N,r,e){console.log("onLineClick:",N)}}},l={};var y=m(_,u,g,!1,w,null,null,null);function w(N){for(let r in l)this[r]=l[r]}const k=function(){return y.exports}();export{k as default};
