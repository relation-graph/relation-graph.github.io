import{M as L}from"./relation-graph-de73bd62.js";import{d as h,r as w,o as g,a as v,c as y,b as l,e as r,w as s,u as b,i as m}from"./index-e1681cb0.js";import{_ as C}from"./_plugin-vue_export-helper-c27b6911.js";const T={style:{height:"calc(100vh - 60px)"}},k={class:"c-my-panel"},I=h({__name:"bothway-tree2",setup(O){const d=w("Horizontal Tree"),i={debug:!1,layout:{layoutName:"tree",from:"left",max_per_width:300,min_per_height:40},defaultNodeShape:1,defaultNodeWidth:100,defaultLineShape:4,defaultJunctionPoint:"lr",defaultNodeBorderWidth:0,defaultLineColor:"rgba(0, 186, 189, 1)",defaultNodeColor:"rgba(0, 206, 209, 1)",defaultLineTextOffset_x:-8,defaultLineTextOffset_y:-1},a=w(null),f=async()=>{var N;const e=i.layout;d.value==="Horizontal Tree"?(e.from="left",e.min_per_width=200,e.min_per_height=60,i.defaultJunctionPoint="lr"):(e.from="top",e.min_per_width=100,e.max_per_width=150,e.min_per_height=120,e.max_per_height=140,i.defaultJunctionPoint="tb");const t=(N=a.value)==null?void 0:N.getInstance();t&&(await t.setOptions(i),await c())},c=async()=>{var N;const e={rootId:"root",nodes:[{id:"root",text:"Node"},{id:"N2",text:"New Node N2"},{id:"N3",text:"New Node N3"},{id:"N4",text:"New Node N4"},{id:"N5",text:"New Node N5"},{id:"N6",text:"New Node N6"},{id:"N7",text:"New Node N7"},{id:"N8",text:"New Node N8"},{id:"N9",text:"New Node N9"},{id:"N10",text:"New Node N10"},{id:"N11",text:"New Node N11"},{id:"N12",text:"New Node N12"},{id:"N13",text:"New Node N13"},{id:"N14",text:"New Node N14"},{id:"N15",text:"New Node N15"},{id:"N16",text:"New Node N16"},{id:"N17",text:"New Node N17"},{id:"N18",text:"New Node N18"},{id:"N19",text:"New Node N19"},{id:"N20",text:"New Node N20"},{id:"N21",text:"New Node N21"},{id:"N22",text:"New Node N22"},{id:"N23",text:"New Node N23"},{id:"N24",text:"New Node N24"},{id:"N25",text:"New Node N25"},{id:"N26",text:"New Node N26"},{id:"N27",text:"New N27"},{id:"N28",text:"New N28"},{id:"N29",text:"New N29"},{id:"N30",text:"New N30"},{id:"N31",text:"New N31"},{id:"N32",text:"New N32"},{id:"N33",text:"New N33"},{id:"N34",text:"New N34"},{id:"N35",text:"New N35"},{id:"N36",text:"New N36"},{id:"N37",text:"New N37"},{id:"N38",text:"New N38"},{id:"N39",text:"New N39"}],lines:[{from:"N3",to:"N2",text:"New Line 1"},{from:"N2",to:"root",text:"New Line 1"},{from:"root",to:"N4",text:"New Line 2"},{from:"N4",to:"N5",text:"New Line 3"},{from:"N6",to:"N7",text:"New Line 2"},{from:"N7",to:"root",text:"New Line 3"},{from:"N8",to:"N9",text:"New Line 4"},{from:"N9",to:"root",text:"New Line 5"},{from:"N10",to:"N11",text:"New Line 6"},{from:"N11",to:"root",text:"New Line 7"},{from:"N13",to:"N12",text:"New Line 8"},{from:"N12",to:"root",text:"New Line 9"},{from:"N18",to:"N17",text:"New Line 10"},{from:"N17",to:"N14",text:"New Line 11"},{from:"N15",to:"N14",text:"New Line 12"},{from:"N16",to:"N15",text:"New Line 13"},{from:"N12",to:"N14",text:"New Line 14"},{from:"N20",to:"N19",text:"New Line 15"},{from:"N21",to:"N19",text:"New Line 16"},{from:"N19",to:"N15",text:"New Line 17"},{from:"N26",to:"N22",text:"New Line 18"},{from:"N24",to:"N25",text:"New Line 19"},{from:"N24",to:"N22",text:"New Line 20"},{from:"N22",to:"N23",text:"New Line 21"},{from:"N23",to:"N14",text:"New Line 22"},{from:"root",to:"N30",text:"New Line 1"},{from:"root",to:"N27",text:"New Line 2"},{from:"N30",to:"N33",text:"New Line 3"},{from:"N30",to:"N29",text:"New Line 4"},{from:"N27",to:"N28",text:"New Line 5"},{from:"N27",to:"N31",text:"New Line 6"},{from:"N27",to:"N32",text:"New Line 7"},{from:"N4",to:"N34",text:"New Line 8"},{from:"N28",to:"N35",text:"New Line 9"},{from:"N28",to:"N36",text:"New Line 12"},{from:"N28",to:"N37",text:"New Line 13"},{from:"N36",to:"N39",text:"New Line 14"},{from:"N36",to:"N38",text:"New Line 15"}]},t=(N=a.value)==null?void 0:N.getInstance();if(t){await t.setJsonData(e);const n=[];for(const o of t.getNodes())o.lot&&o.lot.level<0&&(o.color="red",n.push(o));const x=t.getLinks().filter(o=>n.includes(o.fromNode)||n.includes(o.toNode)).reduce((o,p)=>o.concat(...p.relations),[]);for(const o of x)o.placeText="start"}},_=(e,t)=>{console.log("onNodeClick:",e)},u=(e,t,N)=>{console.log("onLineClick:",e)};return g(()=>{f()}),(e,t)=>{const N=m("el-radio-button"),n=m("el-radio-group");return v(),y("div",null,[l("div",T,[r(b(L),{ref_key:"graphRef",ref:a,options:i,onNodeClick:_,onLineClick:u},{"graph-plug":s(()=>[l("div",k,[r(n,{modelValue:d.value,"onUpdate:modelValue":t[0]||(t[0]=x=>d.value=x),size:"small",onChange:f},{default:s(()=>[r(N,{label:"Horizontal Tree"}),r(N,{label:"Vertical Tree"})]),_:1},8,["modelValue"])])]),_:1},512)])])}}});const J=C(I,[["__scopeId","data-v-a9ffca54"]]);export{J as default};
